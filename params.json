{"name":"Pwrake","tagline":"Pwrake: Parallel workflow extension for Rake ","body":"# Pwrake\r\n\r\nParallel workflow extension for Rake\r\n* Author: Masahiro Tanaka\r\n\r\n([README in Japanese](https://github.com/masa16/pwrake/wiki/Pwrake.ja)),\r\n([GitHub Repository](https://github.com/masa16/pwrake))\r\n\r\n## Features\r\n\r\n* Parallelize all tasks; no need to modify Rakefile, no need to use `multitask`.\r\n* Tasks are executed in the given number of worker threads.\r\n* Remote exuecution using SSH.\r\n* Pwrake is an extension to Rake, not patch to Rake: Rake and Pwrake coexist.\r\n* High parallel I/O performance using Gfarm file system.\r\n\r\n## Installation\r\n\r\nDownload source tgz/zip and expand, cd to subdirectory and install:\r\n\r\n    $ ruby setup.rb\r\n\r\nOr, gem install:\r\n\r\n    $ gem install pwrake\r\n\r\n## Usage\r\n\r\n### Parallel execution using 4 cores at localhost:\r\n\r\n    $ pwrake -j 4\r\n\r\n### Parallel execution using all cores at localhost:\r\n\r\n    $ pwrake -j\r\n\r\n### Parallel execution using total 2*2 cores at remote 2 hosts:\r\n\r\n1. Share your directory among remote hosts via distributed file system such as NFS, Gfarm.\r\n2. Allow passphrase-less access via SSH in either way:\r\n   * Add passphrase-less key generated by `ssh-keygen`.  (Be careful)\r\n   * Add passphrase using `ssh-add`.\r\n3. Make `hosts` file in which remote host names and the number of cores are listed:\r\n\r\n        $ cat hosts\r\n        host1 2\r\n        host2 2\r\n\r\n4. Run `pwrake` with an option `--hostfile` or `-F`:\r\n\r\n        $ pwrake --hostfile=hosts\r\n\r\n## Options\r\n\r\n### Pwrake command line options (in addition to Rake option)\r\n\r\n    -F, --hostfile FILE              [Pw] Read hostnames from FILE\r\n    -j, --jobs [N]                   [Pw] Number of threads at localhost (default: # of processors)\r\n    -L, --log, --log-dir [DIRECTORY] [Pw] Write log to DIRECTORY\r\n        --ssh-opt, --ssh-option OPTION\r\n                                     [Pw] Option passed to SSH\r\n        --filesystem FILESYSTEM      [Pw] Specify FILESYSTEM (nfs|gfarm)\r\n        --gfarm                      [Pw] FILESYSTEM=gfarm\r\n    -A, --disable-affinity           [Pw] Turn OFF affinity (AFFINITY=off)\r\n    -S, --disable-steal              [Pw] Turn OFF task steal\r\n    -d, --debug                      [Pw] Output Debug messages\r\n        --pwrake-conf [FILE]         [Pw] Pwrake configuation file in YAML\r\n        --show-conf, --show-config   [Pw] Show Pwrake configuration options\r\n        --report LOGDIR              [Pw] Report workflow statistics from LOGDIR to HTML and exit.\r\n        --clear-gfarm2fs             [Pw] Clear gfarm2fs mountpoints left after failure.\r\n\r\n### pwrake_conf.yaml\r\n\r\n* If `pwrake_conf.yaml` exists at current directory, Pwrake reads options from it.\r\n* Example (in YAML form):\r\n\r\n        HOSTFILE: hosts\r\n        LOG_DIR: true\r\n        DISABLE_AFFINITY: true\r\n        DISABLE_STEAL: true\r\n        FAILED_TARGET: delete\r\n        PASS_ENV :\r\n         - ENV1\r\n         - ENV2\r\n\r\n* Option list:\r\n\r\n        HOSTFILE, HOSTS   nil(default, localhost)|filename\r\n        LOG_DIR, LOG      nil(default, No log output)|true(dirname=\"Pwrake%Y%m%d-%H%M%S\")|dirname\r\n        LOG_FILE          default=\"pwrake.log\"\r\n        TASK_CSV_FILE     default=\"task.csv\"\r\n        COMMAND_CSV_FILE  default=\"command.csv\"\r\n        GC_LOG_FILE       default=\"gc.log\"\r\n        WORK_DIR          default=$PWD\r\n        FILESYSTEM        default(autodetect)|gfarm\r\n        SSH_OPTION        SSH option\r\n        SHELL_COMMAND     default=$SHELL\r\n        SHELL_RC          Run-Command when shell starts\r\n        PASS_ENV          (Array) Environment variables passed to SSH\r\n        HEARTBEAT         defulat=240 - Hearbeat interval in seconds \r\n        FAILED_TARGET     rename(default)|delete|leave - Treatment of failed target files\r\n        FAILURE_TERMINATION wait(default)|kill|continue - Behavior of other tasks when a task is failed\r\n        QUEUE_PRIORITY          LIHR(default)|FIFO|LIFO|RANK\r\n        NOACTION_QUEUE_PRIORITY FIFO(default)|LIFO|RAND\r\n        SHELL_START_INTERVAL    default=0.012 (sec)\r\n        GRAPH_PARTITION         false(default)|true\r\n\r\n* Options for Gfarm system:\r\n\r\n        DISABLE_AFFINITY    default=false\r\n        DISABLE_STEAL       default=false\r\n        GFARM_BASEDIR       default=\"/tmp\"\r\n        GFARM_PREFIX        default=\"pwrake_$USER\"\r\n        GFARM_SUBDIR        default='/'\r\n        MAX_GFWHERE_WORKER  default=8\r\n        GFARM2FS_OPTION     default=\"\"\r\n        GFARM2FS_DEBUG      default=false\r\n        GFARM2FS_DEBUG_WAIT default=1\r\n\r\n## Task Properties\r\n\r\n* Task properties are specified in `desc` strings above task definition in Rakefile.\r\n\r\nExample of Rakefile:\r\n\r\n    desc \"ncore=4 allow=ourhost*\"\r\n    rule \".o\" => \".c\" do\r\n      sh \"...\"\r\n    end\r\n\r\nProperties (The leftmost item is default):\r\n\r\n    ncore=integer     - The number of cores used by this task.\r\n    exclusive=no|yes  - Exclusively execute this task in a single node.\r\n    allow=hostname    - Allow this host to execute this task. (accepts wild card)\r\n    deny=hostname     - Deny this host to execute this task. (accepts wild card)\r\n    order=deny,allow|allow,deny - The order of evaluation.\r\n    steal=yes|no      - Allow task stealing for this task.\r\n\r\n## Note for Gfarm\r\n\r\n* `gfwhere-pipe` script (included in Pwrake) is used for file-affinity scheduling.\r\n  This script requires Ruby/FFI (https://github.com/ffi/ffi). Install FFI by\r\n\r\n        gem install ffi\r\n\r\n## For Graph Partitioning\r\n\r\n* Compile and Install METIS 5.1.0 (http://www.cs.umn.edu/~metis/). This requires CMake.\r\n\r\n* Install RbMetis (https://github.com/masa16/rbmetis) by\r\n\r\n        gem install rbmetis -- \\\r\n         --with-metis-include=/usr/local/include \\\r\n         --with-metis-lib=/usr/local/lib\r\n\r\n## Current version\r\n\r\n* Pwrake version 2.0.0\r\n\r\n## Tested Platform\r\n\r\n* Ruby 2.2.2\r\n* Rake 10.4.2\r\n* CentOS 6.7\r\n\r\n## Acknowledgment\r\n\r\nThis work is supported by\r\n* JST CREST, research area: \"Development of System Software Technologies for Post-Peta Scale High Performance Computing,\" and\r\n* MEXT Promotion of Research for Next Generation IT Infrastructure \"Resources Linkage for e-Science (RENKEI).\"\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}